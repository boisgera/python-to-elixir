# Processes

## Section

```elixir
p = spawn(fn -> IO.puts("âœ¨") end)
```

```elixir
Process.alive?(p)
```

```elixir
p = spawn(fn -> 42 end)
```

```elixir
Process.alive?(p)
```

```elixir
p =
  spawn(fn ->
    receive do
      sender -> send(sender, 42)
    end
  end)
```

```elixir
IO.puts(Process.alive?(p))
me = self()
send(p, me)
Process.sleep(1000)
IO.puts(Process.alive?(p))
```

```elixir
receive do
  value -> value
end
```

```elixir
# ATM, recursive anonymous functions ain't a thing
print_loop = fn ->
  receive do
    message -> IO.puts(message)
  end

  print_loop.()
end
```

```elixir
defmodule Main do
  def print_loop() do
    receive do
      message -> IO.puts(message)
    end

    print_loop()
  end
end
```

```elixir
import Main
```

```elixir
pp = spawn(&print_loop/0)
```

```elixir
send(pp, "Hello!")
```

```elixir
send(pp, "Holla!")
```
